# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Application Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  deleteorganizationprofile:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 900
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - cognito-idp:AdminDisableUser
              Resource: arn:aws:cognito-idp:eu-west-2:851725385545:userpool/eu-west-2_JUVPtjO37
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:DeleteDataSource
                - bedrock:DeleteKnowledgeBase
                - bedrock:DeleteAgent
                - bedrock:GetKnowledgeBase
                - bedrock:GetAgent
                - bedrock:GetDataSource
              Resource:
                - arn:aws:bedrock:eu-west-2:851725385545:knowledge-base/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:DeleteItem
                - dynamodb:GetItem
              Resource:
                - arn:aws:dynamodb:eu-west-2:851725385545:table/user
                - arn:aws:dynamodb:eu-west-2:851725385545:table/crawler_task
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/delete_organization_profile:*
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${BucketStatic}
                - !Sub arn:${AWS::Partition}:s3:::${BucketStatic}/*
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${BucketWeb}
                - !Sub arn:${AWS::Partition}:s3:::${BucketWeb}/*
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          BUCKETSTATIC_BUCKET_NAME: !Ref BucketStatic
          BUCKETSTATIC_BUCKET_ARN: !GetAtt BucketStatic.Arn
          BUCKETWEB_BUCKET_NAME: !Ref BucketWeb
          BUCKETWEB_BUCKET_ARN: !GetAtt BucketWeb.Arn
  presignup:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/pre_signup:*
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:Admin*
                - cognito-idp:DescribeIdentityProvider
                - cognito-idp:DescribeResourceServer
                - cognito-idp:DescribeUserPool
                - cognito-idp:DescribeUserPoolClient
                - cognito-idp:DescribeUserPoolDomain
                - cognito-idp:GetGroup
                - cognito-idp:ListGroups
                - cognito-idp:ListUserPoolClients
                - cognito-idp:ListUsers
                - cognito-idp:ListUsersInGroup
                - cognito-idp:UpdateGroup
              Resource: !GetAtt UserPool.Arn
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          USERPOOL_USER_POOL_ID: !Ref UserPool
          USERPOOL_USER_POOL_ARN: !GetAtt UserPool.Arn
  deletefiles3:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 15
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - !Ref Layer1
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - s3:DeleteObject
              Resource: arn:aws:s3:::llmanuals-knowledge-source/*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/delete_file_s3:*
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${BucketStatic}
                - !Sub arn:${AWS::Partition}:s3:::${BucketStatic}/*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/static/delete-file
            Method: DELETE
            RequestParameters:
              - method.request.header.Authorization
              - method.request.querystring.fileName:
                  Required: true
                  Caching: false
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          BUCKETSTATIC_BUCKET_NAME: !Ref BucketStatic
          BUCKETSTATIC_BUCKET_ARN: !GetAtt BucketStatic.Arn
  deleteorganizationprofileendpoint:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 15
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Resource:
                - !GetAtt deleteorganizationprofileendpoint.Arn
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/delete_organization_profile_endpoint:*
        - LambdaInvokePolicy:
            FunctionName: !Ref deleteorganizationprofile
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/organization/delete-profile
            Method: DELETE
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          DELETEORGANIZATIONPROFILE_FUNCTION_NAME: !Ref deleteorganizationprofile
          DELETEORGANIZATIONPROFILE_FUNCTION_ARN: !GetAtt deleteorganizationprofile.Arn
  enabledisableknowledgebase:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 900
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 0
        DestinationConfig: {}
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Resource:
                - !GetAtt enabledisableknowledgebase.Arn
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:UpdateAgentKnowledgeBase
              Resource:
                - arn:aws:bedrock:eu-west-2:851725385545:knowledge-base/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/enable_disable_knowledge_base:*
        - LambdaInvokePolicy:
            FunctionName: !Ref prepareagent
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          PREPAREAGENT_FUNCTION_NAME: !Ref prepareagent
          PREPAREAGENT_FUNCTION_ARN: !GetAtt prepareagent.Arn
  knowledgesync:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 30
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Resource:
                - !GetAtt knowledgesync.Arn
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:StartIngestionJob
              Resource: arn:aws:bedrock:eu-west-2:851725385545:knowledge-base/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/knowledge_sync:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/static/sync
            Method: PUT
            RequestParameters:
              - method.request.header.Authorization
        Api2:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/web/sync
            Method: PUT
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  getuploadlink:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 10
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - s3:PutObject
              Resource: arn:aws:s3:::llmanuals-knowledge-source/*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/get_upload_link:*
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${BucketStatic}
                - !Sub arn:${AWS::Partition}:s3:::${BucketStatic}/*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/static/get-upload-link
            Method: GET
            RequestParameters:
              - method.request.header.Authorization
              - method.request.querystring.fileName:
                  Required: true
                  Caching: false
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          BUCKETSTATIC_BUCKET_NAME: !Ref BucketStatic
          BUCKETSTATIC_BUCKET_ARN: !GetAtt BucketStatic.Arn
  updatedatasourceweb:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - s3:GetObject
                - s3:ListBucket
                - s3:DeleteObject
              Resource:
                - arn:aws:s3:::llmanuals-knowledge-source-web
                - arn:aws:s3:::llmanuals-knowledge-source-web/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/update_data_source_web:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/web/update
            Method: POST
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  agentstatus:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 30
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:GetAgentKnowledgeBase
                - bedrock:GetKnowledgeBase
                - bedrock:GetAgent
                - bedrock:ListIngestionJobs
                - bedrock:GetDataSource
              Resource:
                - arn:aws:bedrock:eu-west-2:851725385545:knowledge-base/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/crawler_task
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/agent_status:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/agent/status
            Method: GET
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  updateorganization:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 900
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:UpdateAgent
              Resource:
                - arn:aws:bedrock:eu-west-2:851725385545:agent/*
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - iam:PassRole
              Resource: arn:aws:iam::851725385545:role/service-role/AmazonBedrockExecutionRoleForAgents_4Q1JMLC7NUJ
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
                - dynamodb:UpdateItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Resource:
                - !GetAtt updateorganization.Arn
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/update_organization:*
        - LambdaInvokePolicy:
            FunctionName: !Ref prepareagent
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          PREPAREAGENT_FUNCTION_NAME: !Ref prepareagent
          PREPAREAGENT_FUNCTION_ARN: !GetAtt prepareagent.Arn
  enabledisableknowledgebaseendpoint:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 15
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:GetAgentKnowledgeBase
              Resource:
                - arn:aws:bedrock:eu-west-2:851725385545:knowledge-base/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Resource:
                - !GetAtt enabledisableknowledgebaseendpoint.Arn
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/enable_disable_knowledge_base_endpoint:*
        - LambdaInvokePolicy:
            FunctionName: !Ref enabledisableknowledgebase
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/disable
            Method: POST
            RequestParameters:
              - method.request.header.Authorization
        Api2:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/enable
            Method: POST
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          ENABLEDISABLEKNOWLEDGEBASE_FUNCTION_NAME: !Ref enabledisableknowledgebase
          ENABLEDISABLEKNOWLEDGEBASE_FUNCTION_ARN: !GetAtt enabledisableknowledgebase.Arn
  postsignupconfirmation:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 3
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Resource:
                - !GetAtt postsignupconfirmation.Arn
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/post_signup_confirmation:*
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:Admin*
                - cognito-idp:DescribeIdentityProvider
                - cognito-idp:DescribeResourceServer
                - cognito-idp:DescribeUserPool
                - cognito-idp:DescribeUserPoolClient
                - cognito-idp:DescribeUserPoolDomain
                - cognito-idp:GetGroup
                - cognito-idp:ListGroups
                - cognito-idp:ListUserPoolClients
                - cognito-idp:ListUsers
                - cognito-idp:ListUsersInGroup
                - cognito-idp:UpdateGroup
              Resource: !GetAtt UserPool.Arn
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          USERPOOL_USER_POOL_ID: !Ref UserPool
          USERPOOL_USER_POOL_ARN: !GetAtt UserPool.Arn
  invokeagentrest:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - !Ref Layer1
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:GetAgentKnowledgeBase
                - bedrock:InvokeAgent
                - bedrock:GetKnowledgeBase
                - bedrock:Retrieve
              Resource:
                - arn:aws:bedrock:eu-west-2:851725385545:knowledge-base/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent-alias/*/*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/invoke_agent_rest:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/agent/query
            Method: POST
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  listdatasourceweblinks:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 15
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/list_data_source_web_links:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/web/list
            Method: GET
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  markscrapingtaskasfinished:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 180
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:BatchGetItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/single_scraper_task
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - dynamodb:UpdateItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/crawler_task
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/mark_scraping_task_as_finished:*
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  updateorganizationendpoint:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 30
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource:
                - !GetAtt updateorganizationendpoint.Arn
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/update_organization_endpoint:*
        - LambdaInvokePolicy:
            FunctionName: !Ref updateorganization
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/organization/update
            Method: POST
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          UPDATEORGANIZATION_FUNCTION_NAME: !Ref updateorganization
          UPDATEORGANIZATION_FUNCTION_ARN: !GetAtt updateorganization.Arn
  startcrawlingjob:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
                - dynamodb:UpdateItem
              Resource:
                - arn:aws:dynamodb:eu-west-2:851725385545:table/crawler_task
                - arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - iam:PassRole
                - ecs:RunTask
              Resource:
                - arn:aws:iam::851725385545:role/ecsTaskExecutionRole
                - arn:aws:ecs:eu-west-2:851725385545:task-definition/scraping:*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - states:StartExecution
              Resource: arn:aws:states:eu-west-2:851725385545:stateMachine:MyStateMachine-q04pav1ox
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/start_crawling_job:*
        - StepFunctionsExecutionPolicy:
            StateMachineName: !GetAtt StateMachine.Name
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/web/crawl
            Method: PUT
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          STATEMACHINE_STATE_MACHINE_NAME: !GetAtt StateMachine.Name
          STATEMACHINE_STATE_MACHINE_ARN: !Ref StateMachine
  prepareagent:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 900
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:PrepareAgent
                - bedrock:GetAgentAlias
                - bedrock:DeleteAgentVersion
                - bedrock:DeleteAgentAlias
                - bedrock:CreateAgentAlias
                - bedrock:GetAgent
              Resource:
                - arn:aws:bedrock:eu-west-2:851725385545:agent/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent-alias/*/*
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/prepare_agent:*
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  setupuser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 900
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 0
        DestinationConfig: {}
      Layers:
        - !Ref Layer1
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - bedrock:GetAgentKnowledgeBase
                - bedrock:CreateDataSource
                - bedrock:GetAgent
                - bedrock:AssociateAgentKnowledgeBase
                - bedrock:CreateAgent
                - bedrock:CreateKnowledgeBase
                - bedrock:GetKnowledgeBase
              Resource:
                - arn:aws:bedrock:eu-west-2:851725385545:knowledge-base/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent/*
                - arn:aws:bedrock:eu-west-2:851725385545:agent-alias/*
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - lambda:InvokeFunction
                - lambda:InvokeAsync
              Resource:
                - !GetAtt setupuser.Arn
            - Sid: VisualEditor1
              Effect: Allow
              Action:
                - iam:PassRole
              Resource:
                - arn:aws:iam::851725385545:role/service-role/AmazonBedrockExecutionRoleForKnowledgeBase_kzka2
                - arn:aws:iam::851725385545:role/service-role/AmazonBedrockExecutionRoleForAgents_4Q1JMLC7NUJ
                - arn:aws:iam::851725385545:role/service-role/AmazonBedrockExecutionRoleForKnowledgeBase_k7n89
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:PutItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/setup_user:*
        - LambdaInvokePolicy:
            FunctionName: !Ref prepareagent
        - LambdaInvokePolicy:
            FunctionName: !Ref postsignupconfirmation
      SnapStart:
        ApplyOn: None
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          PREPAREAGENT_FUNCTION_NAME: '!Ref prepareagent'
          PREPAREAGENT_FUNCTION_ARN: '!GetAtt prepareagent.Arn'
          POSTSIGNUPCONFIRMATION_FUNCTION_NAME: !Ref postsignupconfirmation
          POSTSIGNUPCONFIRMATION_FUNCTION_ARN: !GetAtt postsignupconfirmation.Arn
  getorganization:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 10
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - dynamodb:GetItem
              Resource: arn:aws:dynamodb:eu-west-2:851725385545:table/user
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/get_organization:*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/organization
            Method: GET
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  listfiless3:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 128
      Timeout: 10
      Handler: lambda_function.lambda_handler
      Runtime: python3.12
      Architectures:
        - arm64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Sid: VisualEditor0
              Effect: Allow
              Action:
                - s3:ListBucket
              Resource: arn:aws:s3:::llmanuals-knowledge-source
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:eu-west-2:851725385545:*
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - arn:aws:logs:eu-west-2:851725385545:log-group:/aws/lambda/list_files_s3:*
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${BucketStatic}
                - !Sub arn:${AWS::Partition}:s3:::${BucketStatic}/*
      SnapStart:
        ApplyOn: None
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /api/admin/knowledge/static/list
            Method: GET
            RequestParameters:
              - method.request.header.Authorization
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
      Environment:
        Variables:
          BUCKETSTATIC_BUCKET_NAME: !Ref BucketStatic
          BUCKETSTATIC_BUCKET_ARN: !GetAtt BucketStatic.Arn
    # This resource represents your Layer with name boto3_1_34_147. To download
    # the content of your Layer, go to
    #
    # aws.amazon.com/go/view?arn=arn%3Aaws%3Alambda%3Aeu-west-2%3A851725385545%3Alayer%3Aboto3_1_34_147%3A1&source=lambda
  Layer1:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: ./boto3_1_34_147
      LayerName: boto3_1_34_147
      CompatibleRuntimes:
        - python3.12
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
        - email
        - preferred_username
      UserPoolName: !Sub ${AWS::StackName}-UserPool
      AutoVerifiedAttributes:
        - email
  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
  StateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Definition:
        StartAt: StartScraperTasks
        States:
          StartScraperTasks:
            Type: Map
            ToleratedFailurePercentage: 100
            InputPath: $
            ItemsPath: $.urls_tasks
            MaxConcurrency: 10
            Parameters:
              ItemSelector:
                Cluster.$: $.cluster
                TaskDefinition.$: $.task_definition
                ContainerName.$: $.container_name
                UserID.$: $.user_id
                Subnets.$: $.subnets
                SecurityGroups.$: $.security_groups
                CommandArgs.$: $$.Map.Item.Value
            Iterator:
              StartAt: RunScraperTask
              States:
                RunScraperTask:
                  Type: Task
                  Resource: arn:aws:states:::ecs:runTask.sync
                  Parameters:
                    LaunchType: FARGATE
                    Cluster.$: $.ItemSelector.Cluster
                    EnableExecuteCommand: true
                    TaskDefinition.$: $.ItemSelector.TaskDefinition
                    Overrides:
                      ContainerOverrides:
                        - Name.$: $.ItemSelector.ContainerName
                          Command.$: $.ItemSelector.CommandArgs
                          Environment:
                            - Name: USER_ID
                              Value.$: $.ItemSelector.UserID
                    NetworkConfiguration:
                      AwsvpcConfiguration:
                        Subnets.$: $.ItemSelector.Subnets
                        SecurityGroups.$: $.ItemSelector.SecurityGroups
                        AssignPublicIp: ENABLED
                  End: true
            ResultPath: $.results
            Next: MarkTaskAsFinished
          MarkTaskAsFinished:
            Type: Task
            Resource: arn:aws:lambda:eu-west-2:851725385545:function:mark_scraping_task_as_finished
            Parameters:
              ItemSelector:
                UserID.$: $.user_id
                UrlsTasks.$: $.urls_tasks
            End: true
      Logging:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn
      Policies:
        - AWSXrayWriteOnlyAccess
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogDelivery
                - logs:GetLogDelivery
                - logs:UpdateLogDelivery
                - logs:DeleteLogDelivery
                - logs:ListLogDeliveries
                - logs:PutResourcePolicy
                - logs:DescribeResourcePolicies
                - logs:DescribeLogGroups
              Resource: '*'
      Tracing:
        Enabled: true
      Type: STANDARD
      DefinitionSubstitutions:
        LambdaFunction1: !Ref AWS::NoValue
  StateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub
        - /aws/vendedlogs/states/${AWS::StackName}-${ResourceId}-Logs
        - ResourceId: StateMachine
  BucketStatic:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucketsta-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: ''
  BucketWeb:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-bucketweb-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  BucketWebBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketWeb
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt BucketWeb.Arn
              - !Sub ${BucketWeb.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  Authorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Type: <String>
      RestApiId: <String>
      Name: LLManualsAuth